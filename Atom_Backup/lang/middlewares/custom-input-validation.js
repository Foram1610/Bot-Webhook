const { body } = require("express-validator");
const validate = require("./input-validation");
const flowValidation = validate([
  body("nodes.*.id").optional().isString().escape(),
  body("nodes.*.type").optional().isString().escape(),
  body("nodes.*.data.label").notEmpty().isString().escape(),
  body("nodes.*.data.nodeId").notEmpty().isString().escape(),
  body("nodes.*.data.config.isText").optional().isBoolean(),
  body("nodes.*.data.config.isButtons").optional().isBoolean(),
  body("nodes.*.data.config.isGallery").optional().isBoolean(),
  body("nodes.*.data.config.isQuestions").optional().isBoolean(),
  body("nodes.*.data.config.textMsg").optional().isString().escape(),
  body("nodes.*.data.config.buttons.buttonsMsg").optional().isString().escape(),
  body("nodes.*.data.config.buttons.actionButtons.*.name")
    .optional()
    .isString()
    .escape(),
  body("nodes.*.data.config.buttons.actionButtons.*.action")
    .optional()
    .isString()
    .escape(),
  body("nodes.*.data.config.buttons.actionButtons.*.value")
    .optional()
    .isString()
    .escape(),
  body("nodes.*.data.config.gallery.*.title").optional().isString().escape(),
  body("nodes.*.data.config.gallery.*.description")
    .optional()
    .isString()
    .escape(),
  body("nodes.*.data.config.gallery.*.buttonName")
    .optional()
    .isString()
    .escape(),
  body("nodes.*.data.config.gallery.*.buttonURL")
    .optional()
    .isString()
    .escape(),
  body("nodes.*.data.config.questions.*.query").optional().isString().escape(),
  body("nodes.*.data.config.questions.*.variable")
    .optional()
    .isString()
    .escape(),
  body("nodes.*.data.config.questions.*.inputTypes.text")
    .optional()
    .isBoolean(),
  body("nodes.*.data.config.questions.*.inputTypes.email")
    .optional()
    .isBoolean(),
  body("nodes.*.data.config.questions.*.inputTypes.phone")
    .optional()
    .isBoolean(),
  body("nodes.*.position.x").optional().isNumeric(),
  body("nodes.*.position.y").optional().isNumeric(),
  body("nodes.*.width").optional().isNumeric(),
  body("nodes.*.height").optional().isNumeric(),
  body("edges.*.source").optional().notEmpty().isString().escape(),
  body("edges.*.sourceHandle").optional().escape(),
  body("edges.*.target").optional().notEmpty().isString().escape(),
  body("edges.*.targetHandle").optional().escape(),
  body("edges.*.animated").optional().isBoolean(),
  body("edges.*.style.stroke").optional().isString().escape(),
  body("pairs.*.query.keywords.*.value").optional().isString().escape(),
  body("pairs.*.query.label").optional().isString().escape(),
  body("pairs.*.query.active").optional().isString().escape(),
  body("pairs.*.reply.isText").optional().isBoolean(),
  body("pairs.*.reply.isButtons").optional().isBoolean(),
  body("pairs.*.reply.isGallery").optional().isBoolean(),
  body("pairs.*.reply.isQuestions").optional().isBoolean(),
  body("pairs.*.reply.textMsg").optional().isString().escape(),
  body("pairs.*.reply.buttons.buttonsMsg").optional().isString().escape(),
  body("pairs.*.reply.buttons.actionButtons.*.name")
    .optional()
    .isString()
    .escape(),
  body("pairs.*.reply.buttons.actionButtons.*.action")
    .optional()
    .isString()
    .escape(),
  body("pairs.*.reply.buttons.actionButtons.*.value")
    .optional()
    .isString()
    .escape(),
  body("pairs.*.reply.gallery.*.title").optional().isString().escape(),
  body("pairs.*.reply.gallery.*.description").optional().isString().escape(),
  body("pairs.*.reply.gallery.*.buttonName").optional().isString().escape(),
  body("pairs.*.reply.gallery.*.buttonURL").optional().isString().escape(),
  body("pairs.*.reply.questions.*.query").optional().isString().escape(),
  body("pairs.*.reply.questions.*.variable").optional().isString().escape(),
  body("pairs.*.reply.questions.*.inputTypes.text").optional().isBoolean(),
  body("pairs.*.reply.questions.*.inputTypes.email").optional().isBoolean(),
  body("pairs.*.reply.questions.*.inputTypes.phone").optional().isBoolean(),
]);
const sendMessageValidation = validate([
  body("botID").optional().notEmpty().isString().escape(),
  body("config.botID").optional().notEmpty().isString().escape(),
  body("config.buttons.buttonsMsg").optional().isString().escape(),
  body("config.buttons.actionButtons.*.name").optional().isString().escape(),
  body("config.buttons.actionButtons.*.action").optional().isString().escape(),
  body("config.buttons.actionButtons.*.value").optional().isString().escape(),
  body("config.gallery.*.title").optional().isString().escape(),
  body("config.gallery.*.description").optional().isString().escape(),
  body("config.gallery.*.buttonName").optional().isString().escape(),
  body("config.gallery.*.buttonURL").optional().isString().escape(),
  body("config.isButtons").optional().isBoolean().escape(),
  body("config.isGallery").optional().isBoolean().escape(),
  body("config.isQuestions").optional().isBoolean().escape(),
  body("config.isText").optional().isBoolean().escape(),
  body("config.questions.*.query").optional().isString().escape(),
  body("config.questions.*.variable").optional().escape(),
  body("config.questions.*.inputTypes.email").optional().isBoolean().escape(),
  body("config.questions.*.inputTypes.phone").optional().isBoolean().escape(),
  body("config.questions.*.inputTypes.text").optional().isBoolean().escape(),
  body("config.textMsg").optional().isString().escape(),
  body("users").optional().isArray(),
]);

module.exports = {
  flowValidation,
  sendMessageValidation,
};
